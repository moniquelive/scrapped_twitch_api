defmodule TwitchApi.Moderation.UpdateAutoModSettings do
  @moduledoc """
  ⛔ This module is autogenerated please do not modify manually.

  ## Example request from twitch api docs:
  ### descriptions:
  This example updates the overall_level setting to 3.
  Notice in the response that not all settings are set to level 3.

  ### requests:
  curl -X PUT 'https://api.twitch.tv/helix/moderation/automod/settings?broadcaster_id=1234&moderator_id=5678'  
   -H'Authorization: Bearer 4a4x78f5wqvkybms7mxfist3jmzul'  
   -H'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh'
  ​​-H 'Content-Type: application/json'  
   -d'{"overall_level":3}'


  ## Example response from twitch api docs:
  ### descriptions:
  If overall_level is set to 3 and you try to change swearing to 2, all other settings are set to 0. If the goal was to change the swearing setting and leave all the others unchanged, the request must have included all the other settings as well.

  ### responses:
  {"data":[{"broadcaster_id":"1234","moderator_id":"5678","overall_level":null,"disability":0,"aggression":0,"sexuality_sex_or_gender":0,"misogyny":0,"bullying":0,"swearing":2,"race_ethnicity_or_religion":0,"sex_based_terms":0}]}
  swearing
  swearing
  overall_level
  {"data":[{"broadcaster_id":"1234","moderator_id":"5678","overall_level":3,"disability":3,"aggression":3,"sexuality_sex_or_gender":3,"misogyny":3,"bullying":2,"swearing":0,"race_ethnicity_or_religion":3,"sex_based_terms":3}]}
  overall_level


  """

  alias TwitchApi.MyFinch
  alias TwitchApi.ApiJson.Template.Method.Headers

  @doc """
  ### Description:
  Updates the broadcaster’s AutoMod settings.

  ### Required authentication:


  ### Required authorization:
  Requires a User access token with scope set to moderator:manage:automod_settings.
  """

  @typedoc """
  The ID of the broadcaster whose AutoMod settings you want to update.
  """
  @type broadcaster_id :: %{required(:broadcaster_id) => String.t()}

  @typedoc """
  The ID of a user that has permission to moderate the broadcaster’s chat room. This ID must match the user ID associated with the user OAuth token.If the broadcaster wants to update their own AutoMod settings (instead of having the moderator do it), set this parameter to the broadcaster’s ID, too.
  """
  @type moderator_id :: %{required(:moderator_id) => String.t()}

  @spec call(broadcaster_id | moderator_id) :: {:ok, Finch.Response.t()} | {:error, Exception.t()}
  def call(%{broadcaster_id: broadcaster_id}) do
    MyFinch.request(
      "PUT",
      "https://api.twitch.tv/helix/moderation/automod/settings?broadcaster_id=#{broadcaster_id}",
      Headers.config_headers(),
      nil
    )
  end

  def call(%{moderator_id: moderator_id}) do
    MyFinch.request(
      "PUT",
      "https://api.twitch.tv/helix/moderation/automod/settings?moderator_id=#{moderator_id}",
      Headers.config_headers(),
      nil
    )
  end
end
