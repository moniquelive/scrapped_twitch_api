defmodule TwitchApi.Music.GetSoundtrackPlaylist do
  @moduledoc """
  ⛔ This module is autogenerated please do not modify manually.

  ## Example request from twitch api docs:
  ### descriptions:

  ### requests:
  curl -X GET 'https://api.twitch.tv/helix/soundtrack/playlist?id=B0912YMKSL'  
   -H'Authorization: Bearer 4a4x78f5wqvkybms7mxfist3jmzul'  
   -H'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh'


  ## Example response from twitch api docs:
  ### descriptions:

  ### responses:
  {"data":[{"artists":[{"id":"B002F8OLPK","name":"BJ The Chicago Kid","creator_channel_id":""}],"id":"B09J7FZ92D","isrc":"QM24S2106597","duration":210,"title":"Smooth [Explicit]","album":{"id":"B09J7B37VS","name":"Smooth [Explicit]","image_url":"https://m.media-amazon.com/images/I/316SDaD-XQL.jpg"}},{"artists":[{"id":"B071ZL7NDT","name":"23 Unofficial","creator_channel_id":"647990463"},{"id":"B073PHDDSK","name":"KALLITECHNIS","creator_channel_id":""}],"id":"B09C8344GZ","isrc":"QM24S2105530","duration":154,"title":"OUTTA MY WAY","album":{"id":"B09C794J2L","name":"OUTTA MY WAY","image_url":"https://m.media-amazon.com/images/I/515HYAEtpeL.jpg"}}],"pagination":{"cursor":"eyJiIjpudWxsLCJhIjp7Ik9mZnNldCI6MjB9fQ"}}


  """

  alias TwitchApi.MyFinch
  alias TwitchApi.ApiJson.Template.Method.Headers

  @doc """
  ### Description:
  BETA Gets the tracks of a Soundtrack playlist.

  ### Required authentication:


  ### Required authorization:
  Requires an App access token or User access token.
  """

  @typedoc """
  The ID of the Soundtrack playlist to get.
  """
  @type id :: %{required(:id) => String.t()}

  @typedoc """
  The maximum number of tracks to return for this playlist in the response. The minimum number of tracks is 1 and the maximum is 50. The default is 20.
  """
  @type first :: %{required(:first) => integer}

  @typedoc """
  The cursor used to get the next page of tracks for this playlist. The Pagination object in the response contains the cursor’s value.
  """
  @type after_query_param :: %{required(:after_query_param) => String.t()}

  @spec call(id | first | after_query_param) ::
          {:ok, Finch.Response.t()} | {:error, Exception.t()}
  def call(%{id: id}) do
    MyFinch.request(
      "GET",
      "https://api.twitch.tv/helix/soundtrack/playlist?id=#{id}",
      Headers.config_headers(),
      nil
    )
  end

  def call(%{first: first}) do
    MyFinch.request(
      "GET",
      "https://api.twitch.tv/helix/soundtrack/playlist?first=#{first}",
      Headers.config_headers(),
      nil
    )
  end

  def call(%{after: after_query_param}) do
    MyFinch.request(
      "GET",
      "https://api.twitch.tv/helix/soundtrack/playlist?after=#{after_query_param}",
      Headers.config_headers(),
      nil
    )
  end
end
