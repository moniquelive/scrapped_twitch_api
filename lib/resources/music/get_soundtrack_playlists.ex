defmodule TwitchApi.Music.GetSoundtrackPlaylists do
  @moduledoc """
  ⛔ This module is autogenerated please do not modify manually.

  ## Example request from twitch api docs:
  ### descriptions:
  Gets all playlists.
  Gets a single playlist.

  ### requests:
  curl -X GET 'https://api.twitch.tv/helix/soundtrack/playlists?id=B0912YMKSL'  
   -H'Authorization: Bearer 4a4x78f5wqvkybms7mxfist3jmzul'  
   -H'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh'
  curl -X GET 'https://api.twitch.tv/helix/soundtrack/playlists'  
   -H'Authorization: Bearer 4a4x78f5wqvkybms7mxfist3jmzul'  
   -H'Client-Id: t214nt8z1rdtbj69hyarjvh5mi6fh'


  ## Example response from twitch api docs:
  ### descriptions:

  ### responses:
  {"data":[{"title":"Night Shift","id":"B0912YMKSL","image_url":"https://m.media-amazon.com/images/I/41UoIaB4VaL.jpg","description":"R&B to ride out to."}],"pagination":{}}
  {"data":[{"title":"Label Spotlight: Radio Juicy","id":"B08P3N4ZPD","image_url":"https://m.media-amazon.com/images/I/517kGzeaRhL.jpg","description":"Journey through boom-bap, lo-fi, trap and ambient sounds, courtesy of esteemed label Radio Juicy."},{"title":"Fall Days","id":"B09LVX24K7","image_url":"https://m.media-amazon.com/images/I/41w3M-1KfXL.jpg","description":"Turn a new leaf with these chill pop & indie tunes."},{"title":"Release Spotlight: JVNA","id":"B09M7H78YL","image_url":"https://m.media-amazon.com/images/I/419V2D2OlML.jpg","description":"Twitch streamer, singer-songwriter and producer JVNA presents her debut album \"Hope in Chaos\"."},{"title":"Among Us","id":"B08ZDWR371","image_url":"https://m.media-amazon.com/images/I/414O3CYQguL.jpg","description":"Traverse space, do tasks, and eject the Impostors in this official Among Us playlist!"}],"pagination":{"cursor":"eyJiIjpudWxsLCJhIjp7Ik9mZnNldCI6MjB9fQ"}}


  """

  alias TwitchApi.MyFinch
  alias TwitchApi.ApiJson.Template.Method.Headers

  @doc """
  ### Description:
  BETA Gets a list of Soundtrack playlists.

  ### Required authentication:


  ### Required authorization:
  Requires an App access token or User access token.
  """

  @typedoc """
  The ID of the Soundtrack playlist to get. Specify an ID only if you want to get a single playlist instead of all playlists.
  """
  @type id :: %{required(:id) => String.t()}

  @typedoc """
  The maximum number of items to return per page in the response. The minimum page size is 1 item per page and the maximum is 50 items per page. The default is 20.
  """
  @type first :: %{required(:first) => integer}

  @typedoc """
  The cursor used to get the next page of results. The Pagination object in the response contains the cursor’s value. Read more.
  """
  @type after_query_param :: %{required(:after_query_param) => String.t()}

  @spec call(id | first | after_query_param) ::
          {:ok, Finch.Response.t()} | {:error, Exception.t()}
  def call(%{id: id}) do
    MyFinch.request(
      "GET",
      "https://api.twitch.tv/helix/soundtrack/playlists?id=#{id}",
      Headers.config_headers(),
      nil
    )
  end

  def call(%{first: first}) do
    MyFinch.request(
      "GET",
      "https://api.twitch.tv/helix/soundtrack/playlists?first=#{first}",
      Headers.config_headers(),
      nil
    )
  end

  def call(%{after: after_query_param}) do
    MyFinch.request(
      "GET",
      "https://api.twitch.tv/helix/soundtrack/playlists?after=#{after_query_param}",
      Headers.config_headers(),
      nil
    )
  end
end
